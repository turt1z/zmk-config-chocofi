/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define MOVEMENT 1
#define BRACKETS 2
#define NUMBERS 3
#define FN 4

/ {
    combos {
        compatible = "zmk,combos";
        combo_gui {
            timeout-ms = <50>;
            key-positions = <38 39>;
            bindings = <&kp LGUI>;
            layers = <0>;
        };
        combo_pscrn {
            timeout-ms = <50>;
            key-positions = <6 10>;
            bindings = <&kp PSCRN>;
            layers = <1>;
        };
        combo_capsword {
            timeout-ms = <50>;
            key-positions = <16 19>;
            bindings = <&caps_word>;
            layers = <0>;
        };
        combo_alt_f4 {
            timeout-ms = <50>;
            key-positions = <38 8>;
            bindings = <&alt_f4>;
            layers = <1>;
        };
        combo_BT_CLR_ALL {
            timeout-ms = <50>;
            key-positions = <25 9>;
            bindings = <&bt BT_CLR_ALL>;
            layers = <1>;
        };
    };
};

/ {
    macros {
        euro: euro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N2 &kp KP_N8>
                , <&macro_release &kp LALT>
                ;
        };
        ae: ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N8>
                , <&macro_release &kp LALT>
                ;
        };
        oe: oe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N6>
                , <&macro_release &kp LALT>
                ;
        };
        ue: ue {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N2>
                , <&macro_release &kp LALT>
                ;
        };
        alt_f4: alt_f4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp F4>
                , <&macro_release &kp LALT>
                ;
        };
    };
};

/ {

    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };
    keymap {
                compatible = "zmk,keymap";

                // 0
                colemak_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------
// |      |     Q     |     W     |     F     |     P     |     B     |   |     J     |     L     |     U     |     Y     |     ;     |      |
// |      |     A     |     R     |     S     |     T     |     G     |   |     M     |     N     |     E     |     I     |     O     |      |
// |      |     X     |     C     |     D     |     V     |     Z     |   |     K     |     H     |     ,     |     .     |     /     |      |
//                                |    TAB    |    BSPC   |    SPC    |   |    RET    |  BRACKETS |    ESC    |
                        bindings = <
   &none   &kp Q       &kp W        &kp F       &kp P         &kp B        &kp J     &kp L         &kp U              &kp Y           &kp SEMI       &none 
   &none   &kp A       &bhm LCTRL R &bhm LALT S &bhm LSHIFT T &kp G        &kp M     &bhm RSHIFT N &bhm LALT E        &bhm RCTRL I    &kp O          &none 
   &none   &kp X       &kp C        &kp D       &kp V         &kp Z        &kp K     &kp H         &mt KP_MINUS COMMA &mt KP_PLUS DOT &mt UNDER FSLH &none 
                                    &lt 3 TAB   &kp BSPC      &lt 2 SPACE  &lt 1 RET &tog BRACKETS &kp ESC
                        >;
                };

                // 1
                lower_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------
// |      |    PREV   |    NEXT   |    VOL-   |    VOL+   |    PP     |   |    PSCRN  |    AF4    |           |    PSCRN  |           |      |
// |      |    GUI    |    CTRL   |    ALT    |   SHIFT   |    RET    |   |    LFT    |    DWN    |     UP    |    RGT    |           |      |
// |      |           |    BT_0   |   BT_01   |   BT_02   |    BT_C   |   |    HOME   |    PDN    |    PUP    |    END    |           |      |
//                                |    TAB    |    DEL    |    SPC    |   |           |           |           |
                        bindings = <
   &none &kp C_PREV     &kp C_NEXT   &kp C_VOL_DN &kp C_VOL_UP &kp C_PP       &none      &none        &none       &none         &none    &none 
   &none &kp LGUI       &kp LCTL     &kp LALT     &kp LSHIFT   &kp RET        &kp LEFT   &kp DOWN     &kp UP      &kp RIGHT     &none    &none 
   &none &none          &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_CLR     &kp HOME   &kp PG_DN    &kp PG_UP   &kp END       &none    &none 
                          	         &kp TAB      &kp DEL      &kp SPACE      &none      &none        &none
                        >;
                };

                // 2
                raise_layer {
// -------------------------------------------------------------------------------------------------------------------------------------------
// |      |    ESC    |     @     |     #     |     $     |     %     |   |     ^     |     &     |     *     |     ;     |    BKSP   |      |
// |      |    TAB    |     =     |     !     |           |     '     |   |     \     |     {     |     }     |     |     |    ENT    |      |
// |      |     ~     |     €     |     ?     |           |     "     |   |     [     |     (     |     )     |     ]     |    L3     |      |
//                                |    ALT    |    CTRL   |    L0     |   |     L1    |    CTRL   |           |
                        bindings = <
   &none   &kp ESC   &kp AT         &kp HASH     &kp DLLR   &kp PRCNT      &kp CARET     &kp AMPS   &kp KP_MULTIPLY &kp SEMI  &kp BSPC  &none 
   &none   &kp TAB   &kp KP_EQUAL   &kp EXCL     &none      &kp SQT        &kp BSLH      &kp LBRC   &kp RBRC        &kp PIPE  &kp RET   &none 
   &none   &kp TILDE &euro          &kp QMARK    &none      &kp DQT        &kp LBKT      &kp LPAR   &kp RPAR        &kp RBKT  &to 3     &none 
                    	            &kp LALT     &kp LCTL   &to 0          &mo 1         &kp RCTL   &none  
                        >;
                };

                // 3
                number_layer {
// -------------------------------------------------------------------------------------------------------------------------------------------
// |      |    ESC    |     ä     |     /     |     *     |     FN    |   |     ,     |     7     |     8     |     9     |    BKSP   |      |
// |      |    TAB    |     ö     |     -     |     +     |     =     |   |     .     |     4     |     5     |     6     |    ENT    |      |
// |      |    RST    |     ü     |           |           |     GUI   |   |     0     |     1     |     2     |     3     |           |      |
//                                |    ALT    |    CTRL   |     L0    |   |     L1    |     L2    |   SHIFT   |
                        bindings = <
   &none   &kp ESC     &ae       &kp KP_DIVIDE &kp KP_MULTIPLY &mo FN       &kp COMMA    &kp N7      &kp N8     &kp N9      &kp BSPC    &none 
   &none   &kp TAB     &oe       &kp KP_MINUS  &kp KP_PLUS  &kp EQUAL       &kp DOT      &kp N4      &kp N5     &kp N6      &kp RET     &none 
   &none   &kp TILDE   &ue       &none         &none        &kp LGUI        &kp N0       &kp N1      &kp N2     &kp N3      &none       &none 
                    	         &kp LALT      &kp LCTL     &to 0           &mo 1        &to 2       &kp LSHIFT 
                        >;
                };

                // 4
                fn_layer {
// -------------------------------------------------------------------------------------------------------------------------------------------
// |      |  COLEMAK  |   QWERTY  |           |           |           |   |           |     F7    |     F8    |     F9    |    F12    |      |
// |      |    GUI    |    CTRL   |    ALT    |   SHIFT   |           |   |           |     F4    |     F5    |     F6    |    F11    |      |
// |      |           |           |           |           |           |   |           |     F1    |     F2    |     F3    |    F10    |      |
//                                |           |           |    L0     |   |           |           |           |
                        bindings = <
   &none   &to 5        &to 0      &none       &none       &none            &none      &kp F7       &kp F8     &kp F9      &kp F12      &none 
   &none   &kp LGUI     &kp LCTL   &kp LALT    &kp LSHIFT  &none            &none      &kp F4       &kp F5     &kp F6      &kp F11      &none 
   &none   &none        &none      &none       &none       &none            &none      &kp F1       &kp F2     &kp F3      &kp F10      &none 
                    	           &none       &none       &to 0            &none      &none        &none 
                        >;
                };
        };
};