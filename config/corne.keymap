/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define MOVEMENT 1
#define BRACKETS 2

/ {
behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };
    keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |     |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |     |
// |     |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |     |
// |     |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |     | // add _ ! - + to default layer
//                   | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &trans &kp Q       &kp W        &kp E       &kp R         &kp T           &kp Y        &kp U          &kp I        &kp O         &kp P           &trans
   &trans &bhm LGUI A &bhm LCTRL S &bhm LALT D &bhm LSHIFT F &kp G           &kp H        &bhm RSHIFT J  &bhm LALT K  &bhm RCTRL L  &bhm RGUI SEMI  &trans
   &trans &kp Z       &kp X        &kp C       &kp V         &kp B           &kp N        &kp M          &kp COMMA    &kp DOT       &kp FSLH        &trans
                                   &kp TAB     &kp BSPC      &lt 2 SPACE     &lt 1 RET    &tog BRACKETS  &kp 
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |     |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |      |
// |     | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// |     |     |     |     |     |     |   |     |     |     |     |     |      |
//                   | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans   &kp F1       &kp F2       &kp F3       &kp F4       &kp F5         &kp F6   &kp F7   &kp F8 &kp F9    &kp F10 &trans
   &trans   &kp C_PREV   &kp C_NEXT   &kp C_VOL_DN &kp C_VOL_UP   &kp C_PP   &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp F11 &trans
   &trans   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4         &trans   &trans   &trans &trans    &kp F12 &trans
                          	        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |      | ESC |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  ;  | BKSP|      |
// |      | TAB |  =  |     |     |  '  |   |  \  |  {  |  }  |  |  | ENT |      |
// |      |  ~  |  â‚¬  |     |  "  |     |   |  [  |  (  |  )  |  ]  |  L3 |      |
//                    |     |     | L0  |   | ALT | CTRL|  L4 |
                        bindings = <
   &trans  &kp ESC   &kp AT       &kp HASH &kp DLLR &kp PRCNT    &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp SEMI &kp BSPC &trans
   &trans  &kp TAB   &kp KP_EQUAL &trans   &trans   &kp SQT      &kp BSLH  &kp LBRC  &kp RBRC        &kp PIPE &kp RET  &trans
   &trans  &kp TILDE &kp POUND    &trans   &kp DQT  &trans       &kp LBKT  &kp LPAR  &kp RPAR        &kp RBKT &tog 0   &trans
                    	          &trans   &trans   &tog 0       &kp LALT  &kp RCTL  &trans
                        >;
                };
        };
};