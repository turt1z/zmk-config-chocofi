/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define MOVEMENT 1
#define BRACKETS 2
#define NUMBERS 3
#define FN 4

/ {
    combos {
        compatible = "zmk,combos";
        combo_gui {
            timeout-ms = <50>;
            key-positions = <38 39>;
            bindings = <&kp LGUI>;
            layers = <0>;
        };
    };
};

/ {
    macros {
        euro: euro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N2 &kp KP_N8>
                , <&macro_release &kp LALT>
                ;
        };
    };
};

/ {
     behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };
    keymap {
                compatible = "zmk,keymap";

                // 0
                default_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------
// |      |     Q     |     W     |     E     |     R     |     T     |   |     Y     |     U     |     I     |     O     |     P     |      |
// |      |     A     |     S     |     D     |     F     |     G     |   |     H     |     J     |     K     |     L     |     ;     |      |
// |      |     Z     |     X     |     C     |     V     |     B     |   |     N     |     M     |     ,     |     .     |     /     |      | // add _ ! - + to default layer
//                                |    TAB    |    BSPC   |    SPC    |   |    RET    |  BRACKETS |    ESC    |
                        bindings = <
   &none   &kp Q       &kp W        &kp E       &kp R         &kp T           &kp Y     &kp U         &kp I       &kp O        &kp P    &none 
   &none   &kp A       &bhm LCTRL S &bhm LALT D &bhm LSHIFT F &kp G           &kp H     &bhm RSHIFT J &bhm LALT K &bhm RCTRL L &kp SEMI &none 
   &none   &kp Z       &kp X        &kp C       &kp V         &kp B           &kp N     &kp M         &kp COMMA   &kp DOT      &kp FSLH &none 
                                    &kp TAB     &kp BSPC      &lt 2 SPACE     &lt 1 RET &tog BRACKETS &kp ESC
                        >;
                };
                
                // 1
                lower_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------
// |      |    PREV   |    NEXT   |    VOL-   |    VOL+   |     PP    |   |           |           |           |           |           |      |
// |      |    GUI    |    CTRL   |    ALT    |   SHIFT   |           |   |    LFT    |    DWN    |     UP    |    RGT    |           |      |
// |      |           |           |           |           |           |   |    HOME   |    PDN    |    PUP    |    END    |           |      |
//                                |    TAB    |    DEL    |    SPC    |   |           |           |           |
                        bindings = <
   &none  &kp C_PREV   &kp C_NEXT  &kp C_VOL_DN &kp C_VOL_UP &kp C_PP       &none      &none        &none       &none         &none    &none 
   &none  &kp LGUI     &kp LCTL    &kp LALT     &kp LSHIFT   &none          &kp LEFT   &kp DOWN     &kp UP      &kp RIGHT     &none    &none 
   &none  &none        &none       &none        &none        &none          &kp HOME   &kp PG_DN    &kp PG_UP   &kp END       &none    &none 
                          	       &kp TAB      &kp DEL      &kp SPACE      &none      &none        &none
                        >;
                };

                // 2
                raise_layer {
// -------------------------------------------------------------------------------------------------------------------------------------------
// |      |    ESC    |     @     |     #     |     $     |     %     |   |     ^     |     &     |     *     |     ;     |    BKSP   |      |
// |      |    TAB    |     =     |           |           |     '     |   |     \     |     {     |     }     |     |     |    ENT    |      |
// |      |     ~     |     â‚¬     |           |     "     |           |   |     [     |     (     |     )     |     ]     |    L5     |      |
//                                |           |    CTRL   |    L0     |   |    ALT    |    CTRL   |     L3    |
                        bindings = <
   &none   &kp ESC   &kp AT         &kp HASH     &kp DLLR   &kp PRCNT      &kp CARET   &kp AMPS   &kp KP_MULTIPLY &kp SEMI  &kp BSPC   &none 
   &none   &kp TAB   &kp KP_EQUAL   &none        &none      &kp SQT        &kp BSLH    &kp LBRC   &kp RBRC        &kp PIPE  &kp RET    &none 
   &none   &kp TILDE &euro          &none        &kp DQT    &none          &kp LBKT    &kp LPAR   &kp RPAR        &kp RBKT  &to 0      &none 
                    	            &none        &kp LCTL   &to 0          &kp LALT    &kp RCTL   &to 3  
                        >;
                };

                // 3
                number_layer {
// -------------------------------------------------------------------------------------------------------------------------------------------
// |      |    ESC    |           |     /     |     *     |           |   |     ,     |     7     |     8     |     9     |    BKSP   |      |
// |      |    TAB    |           |     -     |     +     |     =     |   |     .     |     4     |     5     |     6     |    ENT    |      |
// |      |    RST    |           |           |           |           |   |     0     |     1     |     2     |     3     |    L5     |      |
//                                |    FN     |    CTRL   |    L0     |   |    ALT    |     L2    |           |
                        bindings = <
   &none   &kp ESC     &none     &kp KP_DIVIDE &kp KP_KP_MULTIPLY &none   &kp KP_COMMA &kp KP_N7   &kp KP_N8   &kp KP_N9   &kp BSPC    &none 
   &none   &kp TAB     &none     &kp KP_MINUS  &kp KP_PLUS  &kp KP_EQUAL  &kp KP_DOT   &kp KP_N4   &kp KP_N5   &kp KP_N6   &kp RET     &none 
   &none   &kp TILDE   &none     &none         &none        &none         &kp KP_N0    &kp KP_N1   &kp KP_N2   &kp KP_N3   &none       &none 
                    	          &mo FN       &kp LCTL     &to 0         &kp LALT     &to 2       &none 
                        >;
                };

                // 4
                fn_layer {
// -------------------------------------------------------------------------------------------------------------------------------------------
// |      |           |           |           |           |           |   |           |     F7    |     F8    |     F9    |           |      |
// |      |    GUI    |    CTRL   |    ALT    |   SHIFT   |           |   |           |     F4    |     F5    |     F6    |           |      |
// |      |           |           |           |           |           |   |           |     F1    |     F2    |     F3    |           |      |
//                                |           |           |    L0     |   |           |           |           |
                        bindings = <
   &none   &kp ESC      &none      &none       &none       &none            &none      &kp F7       &kp F8     &kp F9      &none       &none 
   &none   &kp LGUI     &kp LCTL   &kp LALT    &kp LSHIFT  &none            &none      &kp F4       &kp F5     &kp F6      &none       &none 
   &none   &kp TILDE    &none      &none       &none       &none            &none      &kp F1       &kp F2     &kp F3      &none       &none 
                    	           &none       &none       &to 0            &none      &none        &none 
                        >;
                };
        };
};


// !, ?